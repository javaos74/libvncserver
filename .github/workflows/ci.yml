name: CI

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        cmake_options:
#          - "-DWITH_OPENSSL=ON  -DWITH_GNUTLS=OFF -DWITH_GCRYPT=OFF" # build with OpenSSL
#          - "-DWITH_OPENSSL=OFF -DWITH_GNUTLS=ON  -DWITH_GCRYPT=ON"  # build with GnuTLS and Libgrypt
#          - "-DWITH_OPENSSL=OFF -DWITH_GNUTLS=OFF -DWITH_GCRYPT=OFF" # build without external encryption libraries
          - "-DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchain-cross-mingw32-linux.cmake" # crosscompile with MinGW toolchain
        include:
          - os: macos-latest
            macos_cmake_options: "-DOPENSSL_ROOT_DIR=/usr/local/opt/openssl" # set this extra var for OSX
        exclude:
          - os: macos-latest
            cmake_options: "-DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchain-cross-mingw32-linux.cmake" # don't test MinGW from OSX
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Ubuntu Build Dependencies
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt update
          sudo apt install libsdl2-dev liblzo2-dev libssl-dev gnutls-dev libgcrypt-dev mingw-w64-x86-64-dev binutils-mingw-w64-x86-64 gcc-mingw-w64-x86-64 wine
      - name: Install MacOS Build Dependencies
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew update
          brew install sdl2 lzo
      - name: Build
        run: |
          mkdir build
          cd build
          cmake ${{ matrix.cmake_options }} ${{ matrix.macos_cmake_options }} ..
          cmake --build .
      - name: Test
        run: |
          cd build
          cp /usr/x86_64-w64-mingw32/lib/libwinpthread-1.dll test/ || true # used only for MinGW tests, ok to fail for other cases
          ctest --output-on-failure
      - name : Upload 
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: hkusu/s3-upload-action@v2
        id: upload # specify some ID for use in subsequent steps
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'ap-northeast-2'
          aws-bucket: ${{ secrets.AWS_BUCKET }}
          file-path: './build/examples/*'
          destination-dir: '1122'
          output-file-url: 'true' # specify true
      - name: Show URL
        run: echo '${{ steps.upload.outputs.file-url }}' # use this output
